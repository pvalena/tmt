summary: Prepare system for testing

description: |
    Additional configuration of the provisioned environment needed
    for testing.

    * Install artifact (customizable according to user needs)
        * Conflicts between rpms
        * Optionally add debuginfo
        * Install with devel module
    * Additional setup possible if needed
        * Inject arbitrary commands
        * Before/after artifact installation

/shell:
    summary:
        Prepare system using shell commands
    description:
        Execute arbitratry shell commands to set up the system.
    example: |
        prepare:
            how: shell
            script: dnf install -y httpd
    implemented:
        - /tmt/steps/provision/localhost
        - /tmt/steps/provision/podman
        - /tmt/steps/provision/vagrant
        - /tmt/steps/provision/testcloud

/install:
    summary:
        Install a package using dnf/yum.
    description:
        Installs a package(s) from specified source and verifies that it was
        installed successfuly.
    example: |
        prepare:
            how: install
            package: ruby
    implemented:
        - /tmt/steps/prepare

/install-copr:
    summary:
        Enable COPR repository using dnf and install package(s).
    description:
        Enable COPR repository and then run same as install.
    example: |
        prepare:
            how: install
            copr: pvalena/vagrant
            package: vagrant
    implemented:
        - /tmt/steps/prepare

/install-koji:
    summary:
        Download build package(s) and install them.
    description:
        Downloads build packages from koji (or brew) and install them using dnf/yum.
    example: |
        prepare:
            how: install
            url: https://koji.fedoraproject.org/koji/buildinfo?buildID=1465484
    implemented:
        - /tmt/steps/prepare

/ansible:
    summary:
        Apply ansible playbook to get the desired final state.
    description:
        One or more playbooks can be provided as a list under the
        ``playbooks`` attribute.  Each of them will be applied
        using ``ansible-playbook`` in the given order.  Optional
        attribute ``roles`` can be used to enable additional
        roles.  Role can be either an ansible galaxy role name,
        git url or a path to file with detailed requirements.
    example: |
        prepare:
            how: ansible
            roles:
                - nginxinc.nginx
            playbooks:
                - common.yml
                - rhel7.yml
    implemented:
        - /tmt/steps/provision/localhost
        - /tmt/steps/provision/podman
        - /tmt/steps/provision/vagrant
        - /tmt/steps/provision/testcloud
